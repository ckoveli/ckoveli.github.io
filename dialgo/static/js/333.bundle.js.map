{"version":3,"file":"static/js/333.bundle.js","mappings":"0+CAYe,SAASA,EAAIC,GAAiB,I,IAAdC,EAAUD,EAAVC,WACrBC,GAAWC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQH,QAAQ,IACtDI,GAAsBH,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,QAAQC,mBAAmB,IACAC,G,GAA5CC,EAAAA,EAAAA,UAASN,EAASI,GAAqBG,M,EAAK,E,k5BAA3EC,EAAWH,EAAA,GAAEI,EAAcJ,EAAA,GAC5BK,GAAeC,EAAAA,EAAAA,QAAO,MACtBC,GAAWC,EAAAA,EAAAA,MAoBjB,OAlBAC,EAAAA,EAAAA,YAAU,kBAAMJ,EAAaK,QAAQC,QAAQ,GAAE,IAmB3CC,EAAAA,cAACC,EAAAA,GAAG,KACAD,EAAAA,cAACE,EAAAA,GAAI,CAACC,SAlBQ,SAAAC,GAClBA,EAAEC,iBAEFV,GACIW,EAAAA,EAAAA,IAAc,CACVC,MAAOpB,EACPD,QAAOsB,EAAAA,EAAA,GACAzB,EAASI,IAAoB,IAChCG,KAAMC,OAKlBT,GACJ,GAKYkB,EAAAA,cAACS,EAAAA,GAAS,CAACC,KAAG,GACVV,EAAAA,cAACC,EAAAA,GAAG,KACAD,EAAAA,cAACW,EAAAA,GAAK,KAAC,QACPX,EAAAA,cAACY,EAAAA,GAAK,CACFC,SAAUpB,EACVqB,KAAK,OACLxB,KAAK,OACLyB,MAAOxB,EACPyB,SAAU,SAAAZ,GAAC,OAAIZ,EAAeY,EAAEa,OAAOF,MAAM,MAIzDf,EAAAA,cAACS,EAAAA,GAAS,CAACC,KAAG,GACVV,EAAAA,cAACC,EAAAA,GAAG,KACAD,EAAAA,cAACkB,EAAAA,GAAM,CACHJ,KAAK,SACLK,UAAU,QACVC,MAAM,WACT,SAQzB,C","sources":["webpack://dialgo/./src/components/modal/Name.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProject } from \"../../projectSlice\";\nimport { \n    Col,\n    Form,\n    FormGroup,\n    Input,\n    Button,\n    Label\n} from \"reactstrap\";\n\nexport default function Name({ closeModal }) {\n    const projects = useSelector(state => state.project.projects);\n    const currentProjectIndex = useSelector(state => state.project.currentProjectIndex);\n    const [projectName, setProjectName] = useState(projects[currentProjectIndex].name);\n    const inputElement = useRef(null);\n    const dispatch = useDispatch();\n\n    useEffect(() => inputElement.current.select(), []);\n\n    const renameProject = e => {\n        e.preventDefault();\n\n        dispatch(\n            updateProject({\n                index: currentProjectIndex,\n                project: {\n                    ...projects[currentProjectIndex],\n                    name: projectName\n                }\n            })\n        );\n\n        closeModal();\n    }\n\n    return (\n        <Col>\n            <Form onSubmit={renameProject}>\n                <FormGroup row>\n                    <Col>\n                        <Label>Name</Label>\n                        <Input \n                            innerRef={inputElement}\n                            type=\"text\" \n                            name=\"name\" \n                            value={projectName} \n                            onChange={e => setProjectName(e.target.value)} \n                        />\n                    </Col>\n                </FormGroup>\n                <FormGroup row>\n                    <Col>\n                        <Button \n                            type=\"submit\"\n                            className=\"w-100\" \n                            color=\"primary\"\n                        >\n                            OK\n                        </Button>\n                    </Col>\n                </FormGroup>\n            </Form>\n        </Col>\n    );\n}"],"names":["Name","_ref","closeModal","projects","useSelector","state","project","currentProjectIndex","_useState2","useState","name","projectName","setProjectName","inputElement","useRef","dispatch","useDispatch","useEffect","current","select","React","Col","Form","onSubmit","e","preventDefault","updateProject","index","_objectSpread","FormGroup","row","Label","Input","innerRef","type","value","onChange","target","Button","className","color"],"sourceRoot":""}