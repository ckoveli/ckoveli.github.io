{"version":3,"file":"static/js/980.bundle.js","mappings":"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","sources":["webpack://dialgo/./src/views/Canvas.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { updateProject } from \"../projectSlice\";\nimport { Input } from \"reactstrap\";\nimport { fabric } from \"fabric\";\n\nexport default function Canvas() {\n    const cursor = useSelector(state => state.project.cursor);\n    const projects = useSelector(state => state.project.projects);\n    const currentProjectIndex = useSelector(state => state.project.currentProjectIndex);\n    const dispatch = useDispatch();\n    const [currentProject, setCurrentProject] = useState(null);\n    const [canvasData, setCanvasData] = useState({\n        width: 0,\n        height: 0,\n        unit: null,\n        scale: 0,\n        position: {\n            top: \"50%\",\n            left: \"50%\",\n        }\n    });\n\n    useEffect(() => {\n        setCurrentProject(projects[currentProjectIndex]);\n        if (currentProject) {\n            setCanvasData({\n                width: currentProject.width,\n                height: currentProject.height,\n                unit: currentProject.unit,\n                scale: currentProject.scale,\n                position: currentProject.position\n            });\n        }\n    }, [currentProjectIndex, currentProject?.position]);\n    // const currentProject = projects[currentProjectIndex];\n    const fabricWrapper = useRef(null);\n    const canvasElement = useRef(null);\n    \n    const ZOOM_MIN = 0.1;\n    const ZOOM_MAX = 5;\n    const ZOOM_STEP = 0.1;\n\n    let pos1 = 0, pos2 = 0, pos3 = 0, pos4 = 0;\n\n    const updateData = (data) => {\n        setCanvasData({\n            ...canvasData,\n            ...data\n        });\n        dispatch(\n            updateProject({\n                index: currentProjectIndex,\n                project: {\n                    ...currentProject,\n                    ...data\n                }\n            })\n        );\n    }\n\n    const canvasDraw = e => {\n        const canvas = new fabric.Canvas(\n            canvasElement.current, \n            {\n                width: canvasElement.current.clientWidth,\n                height: canvasElement.current.clientHeight,\n                // defaultCursor: \"crosshair\",\n                backgroundColor: \"blue\"\n            }\n        );\n        \n        // Add objects to the canvas as desired\n        const rect = new fabric.Rect({\n            fill: 'red',\n            width: 100,\n            height: 100,\n            left: e.pageX - canvasElement.current.offsetLeft,\n            top: e.pageY - canvasElement.current.offsetTop,\n            selectable: true\n        });\n        canvas.add(rect);\n        canvas.renderAll();\n    }\n\n    const mouseDown = e => {\n        e.preventDefault();\n\n        switch (cursor) {\n            case \"default\":\n                if (e.target === canvasElement.current) {\n                    canvasDraw(e);\n                }\n                \n                break;\n                \n            case \"grab\":\n                // get the mouse cursor position at startup:\n                pos3 = e.clientX;\n                pos4 = e.clientY;\n                document.onmouseup = () => {\n                    document.onmouseup = null;\n                    document.onmousemove = null;\n                };\n\n                // call a function whenever the cursor moves:\n                document.onmousemove = mouseMove;\n\n                break;\n\n            case \"zoom-in\":\n                if (canvasData.scale < ZOOM_MAX) {\n                    updateData({\n                        scale: canvasData.scale + ZOOM_STEP,\n                        // position: {\n                        //     top: e.clientY + (window.innerHeight / 2 - e.clientY) * ZOOM_STEP + '%',\n                        //     left: e.clientX + (window.innerWidth / 2 - e.clientX) * ZOOM_STEP + '%',\n                        // }\n                    });\n                }\n                break;\n\n            case \"zoom-out\":\n                if (canvasData.scale > ZOOM_MIN) {\n                    updateData({\n                        scale: canvasData.scale - ZOOM_STEP,\n                        // position: {\n                        //     top: e.clientY + (window.innerHeight / 2 - e.clientY) * ZOOM_STEP + '%',\n                        //     left: e.clientX + (window.innerWidth / 2 - e.clientX) * ZOOM_STEP + '%',\n                        // }\n                    });\n                }\n                break;\n        }\n    }\n\n    const mouseMove = e => {\n        e.preventDefault();\n\n        // calculate the new cursor position:\n        pos1 = pos3 - e.clientX;\n        pos2 = pos4 - e.clientY;\n        pos3 = e.clientX;\n        pos4 = e.clientY;\n        \n        // set the element's new position:\n        updateData({\n            position: {\n                top: `${fabricWrapper.current.offsetTop - pos2}px`, \n                left: `${fabricWrapper.current.offsetLeft - pos1}px`,\n            }\n        });\n        \n    }\n    \n    return (\n        <>\n            <div \n                className=\"canvas-wrapper\"\n                style={{cursor: cursor}}\n                onMouseDown={mouseDown}\n            >\n                <div\n                    ref={fabricWrapper}\n                    className=\"fabric-wrapper\"\n                    style={{\n                        position: \"absolute\",\n                        top: canvasData.position.top,\n                        left: canvasData.position.left,\n                        scale: canvasData.scale,\n                        // transform: `scale(${canvasData.scale})`,\n                        width: canvasData.width + canvasData.unit,\n                        height: canvasData.height + canvasData.unit,\n                }}>\n                    <canvas\n                        ref={canvasElement}\n                        style={{\n                            width: \"100%\",\n                            height: \"100%\",\n                        }}\n                    />\n                </div>\n            </div>\n            <div className=\"slider\">\n                <Input \n                    type=\"range\" \n                    min={ZOOM_MIN} \n                    max={ZOOM_MAX} \n                    step={ZOOM_STEP} \n                    value={canvasData.scale} \n                    onChange={e => updateData({scale: e.target.value})} \n                />\n            </div>\n        </>\n    );\n}"],"names":["Canvas","cursor","useSelector","state","project","projects","currentProjectIndex","dispatch","useDispatch","_useState2","_slicedToArray","useState","currentProject","setCurrentProject","_useState4","width","height","unit","scale","position","top","left","canvasData","setCanvasData","useEffect","fabricWrapper","useRef","canvasElement","pos1","pos2","pos3","pos4","updateData","data","_objectSpread","updateProject","index","mouseMove","e","preventDefault","clientX","clientY","concat","current","offsetTop","offsetLeft","React","className","style","onMouseDown","target","canvas","fabric","clientWidth","clientHeight","backgroundColor","rect","fill","pageX","pageY","selectable","add","renderAll","canvasDraw","document","onmouseup","onmousemove","ref","Input","type","min","max","step","value","onChange"],"sourceRoot":""}